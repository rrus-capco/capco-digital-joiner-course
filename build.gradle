plugins {
    id 'java'
    id "org.springframework.boot" version "2.3.4.RELEASE"
    id "io.spring.dependency-management" version "1.0.10.RELEASE"
}

group 'com.capco'
version '1.0-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web'){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation('org.springframework.boot:spring-boot-starter-data-mongodb'){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    testImplementation('org.springframework.boot:spring-boot-starter-test'){
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    testImplementation 'io.rest-assured:spring-mock-mvc:3.3.0'
    testImplementation 'junit:junit:4.13'
    implementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
}

sourceSets {
    integrationTest {
        java.srcDir "$projectDir/src/integrationTest/java"
        resources.srcDir "$projectDir/src/integrationTest/resources"
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
}

task dockerBuild(type: Exec){
    workingDir "$projectDir"
    commandLine "docker", "build", "--build-arg", "JAR_FILE=build/libs/*.jar", "-t", "ryanrush/rrus-capco-digitalengineeringcourse", "."
}

task dockerRun(type: Exec){
    workingDir "$projectDir"
    commandLine "docker", "run", "-p", "8090:8090", "ryanrush/rrus-capco-digitalengineeringcourse"
}

dockerBuild.dependsOn build
dockerRun.dependsOn dockerBuild

check.dependsOn integrationTest